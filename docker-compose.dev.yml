version: "3.3"
services:
  # proxy:
  #   ports:
  #     - "8010:80"
  #     - "8090:8080"
  #   command:
  #     # Disable Docker Swarm mode for local development
  #     - --providers.docker.swarmmode=false
  #     # Enable the Dashboard and API in insecure mode for local development
  #     - --api.insecure=true
  #   labels:
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
  #     - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80
  #     # - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
  #     # - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-dashboard-http.rule=PathPrefix(`/traefik`)
  #     # - traefik.http.services.${STACK_NAME?Variable not set}-traefik-dashboard.loadbalancer.server.port=8080
  #     # # enable auth on
  #     # - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-dashboard-http.middlewares=${STACK_NAME?Variable not set}-traefik-dashboard-auth
  #     # - traefik.http.middlewares.${STACK_NAME?Variable not set}-traefik-dashboard-auth.basicauth.users=user:$$2y$$05$$903CSuS1Cd8qfunjKpLXoO3szTEa2RuVj9MA73EfxeoGjeeuGXHsm

  lambda:
    volumes:
      - ./services/lambda/api/app.py:/var/task/app.py

  jupyter:
    volumes:
      - ./notebooks:/src/notebooks
      - ./app:/src/app
      - ./models:/src/models
      - ./conda-environment.yml:/src/conda-environment.yml
      - ./setup.py:/src/setup.py
      - ./requirements.in:/src/requirements.in
      - ./requirements.txt:/src/requirements.txt

  streamlit:
    volumes:
      - ./services/streamlit/app:/src/app
      # - ./services/streamlit/src/.streamlit:/root/.streamlit

  # rubrix:

  # elasticsearch:

  # kibana:

# networks:
#   traefik-public:
#     # For local dev, don't expect an external Traefik network
#     external: false
