version: "3.3"
services:

  lambda-base:
    image: "${DOCKER_IMAGE_LAMBDA?Variable not set}-pre:${TAG-latest}"
    build:
      context: ./services/lambda/api
      target: base
      args:
        - AWS_REGION=${AWS_REGION}
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    networks:
      - rubrix

  lambda:
    image: "${DOCKER_IMAGE_LAMBDA?Variable not set}-api:${TAG-latest}"
    build:
      context: ./services/lambda/api
      target: api
      args:
        - AWS_REGION=${AWS_REGION}
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    networks:
      - rubrix

  jupyter:
    image: "${DOCKER_IMAGE_JUPYTER?Variable not set}:${TAG-latest}"
    build:
      context: ./services/jupyter/src
    volumes:
      - jupyter-cachedata:/root/.cache
    environment:
      - WANDB_LOG_MODEL=true
      - WANDB_DIR=/src
      - WANDB_API_KEY=${WANDB_API_KEY}
      - HF_TOKEN=${HF_TOKEN}
      - PROJECT_NAME=${PROJECT_NAME}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    networks:
      - rubrix

  streamlit:
    image: "${DOCKER_IMAGE_STREAMLIT?Variable not set}:${TAG-latest}"
    build:
      context: ./services/streamlit/src
    env_file:
      - .env
    environment:
      - LAMBDA_URL=${LAMBDA_URL-http://lambda:8080/2015-03-31/functions/function/invocations}
    networks:
      - rubrix
    volumes:
      - streamlit-cachedata:/root/.cache

  rubrix:
    image: recognai/rubrix:latest
    restart: unless-stopped
    environment:
      ELASTICSEARCH: http://elasticsearch:9200
      # RUBRIX_LOCAL_AUTH_USERS_DB_FILE: /config/.users.yaml
      RUBRIX_LOCAL_AUTH_DEFAULT_PASSWORD: ${RUBRIX_LOCAL_AUTH_DEFAULT_PASSWORD-$$2y$$05$$X1i7R1R7CeFyD/dxZ5ttu.FcJQbL2Gh30.86OxCxzTXl/BR.RO.6O}
    # volumes:
    #   - ./services/rubrix/src/config/.users.yaml:/config/.users.yaml
    networks:
      - rubrix

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    environment:
      - node.name=elasticsearch
      - cluster.name=es-rubrix-local
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - rubrix
    volumes:
      - elasticdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.1
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - rubrix

networks:
  rubrix:
    driver: bridge

volumes:
  # app-db-data-test:
  elasticdata:
  jupyter-cachedata:
  streamlit-cachedata:
