version: "3.3"
# services:
  # proxy:
  #   ports:
  #     - "8010:80"
  #     - "8090:8080"
  #   command:
  #     # Enable Docker in Traefik, so that it reads labels from Docker services
  #     - --providers.docker
  #     # Add a constraint to only use services with the label for this stack
  #     # from the env var TRAEFIK_TAG
  #     - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
  #     # Do not expose all Docker services, only the ones explicitly exposed
  #     - --providers.docker.exposedbydefault=false
  #     # Disable Docker Swarm mode for local development
  #     # - --providers.docker.swarmmode
  #     # Enable the access log, with HTTP requests
  #     - --accesslog
  #     # Enable the Traefik log, for configurations and errors
  #     - --log
  #     # Enable the Dashboard and API
  #     - --api
  #     # Enable the Dashboard and API in insecure mode for local development
  #     - --api.insecure=true
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
  #     - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80

  # restapi:
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - ./services/restapi/src/myapp:/app/myapp
  #   environment:
  #     - SERVER_HOST=http://${DOMAIN?Variable not set}
  #     - FASTAPI_DEBUG=true
  #   build:
  #     context: ./services/restapi/src
  #     dockerfile: Dockerfile
  #     args:
  #       BACKEND_APP_MODULE: ${BACKEND_APP_MODULE-app.main:app}
  #       BACKEND_PRE_START_PATH: ${BACKEND_PRE_START_PATH-/app/prestart.sh}
  #       BACKEND_PROCESS_MANAGER: ${BACKEND_PROCESS_MANAGER-uvicorn}
  #       BACKEND_WITH_RELOAD: ${BACKEND_WITH_RELOAD-true}
  #       INSTALL_DEV: ${INSTALL_DEV-true}
  #   labels:
  #     - traefik.enable=true
  #     - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)  || PathPrefix(`/webapp`)
  #     - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=80

  # db:
  #   ports:
  #     - "54320:5432"


  # db_test:
  #   image: postgres:14
  #   volumes:
  #     - app-db-data-test:/var/lib/postgresql/data/pgdata
  #   env_file:
  #     - .env
  #   environment:
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #     # Postgres testing database
  #     - POSTGRES_SERVER=${POSTGRES_SERVER_TEST-db_test}
  #     - POSTGRES_USER=${POSTGRES_USER_TEST-postgres_test}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_TEST-test}
  #     - POSTGRES_DB=${POSTGRES_DB_TEST-app_test}
  #   ports:
  #     - "54321:5432"

# networks:
#   traefik-public:
#     # For local dev, don't expect an external Traefik network
#     external: false

# volumes:
#   app-db-data-test:
